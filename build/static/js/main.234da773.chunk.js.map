{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newObject","post","id","put","delete","Person","name","number","Notification","message","messageStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","messageFormat","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterNames","setFilter","errorMessage","setErrorMessage","useEffect","personService","phonebook","onSubmit","event","preventDefault","isNewName","forEach","person","includes","window","confirm","personObject","changingPersonId","updatedPersons","map","catch","returnedPerson","concat","value","onChange","console","log","target","type","filter","toLowerCase","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MACMA,EAAU,eAsBD,EApBA,WAEb,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAkBd,EAfA,SAACC,GAEd,OADYL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAad,EAVA,SAACG,EAAIF,GAElB,OADYL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQd,EALM,SAACG,GAEpB,OADYP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCjBvBM,EAAS,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACrB,OACE,4BACE,oCAAUD,GACV,sCAAYC,KAKZC,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAASH,EAAU,EAAVA,KAC9B,GAAgB,OAAZG,EACF,OAAO,KAGT,IAAMC,EAAe,CACnBC,MAAO,MACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,QAYhB,OACE,yBAAKC,MAAOR,GAVQ,SAACD,EAASH,GAC9B,MAAe,YAAZG,GACDC,EAAaC,MAAQ,QACf,SAAN,OAAgBL,IACK,YAAZG,EACH,kBAAN,OAAyBH,EAAzB,8CADK,EAOJa,CAAcV,EAASH,KAyHfc,EAnHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGkBJ,mBAAS,IAH3B,mBAGTK,EAHS,KAGEC,EAHF,OAIiBN,mBAAS,IAJ1B,mBAITO,EAJS,KAIIC,EAJJ,OAKwBR,mBAAS,MALjC,mBAKTS,EALS,KAKKC,EALL,KAOhBC,qBAAU,WACRC,IAEGpC,MAAK,SAAAqC,GACJX,EAAWW,QAEd,IAuEH,OACE,6BACE,+CACA,kBAAC,EAAD,CAAczB,QAASqB,EAAcxB,KAAMkB,IAC3C,0BAAMW,SAzEQ,SAACC,GACjBA,EAAMC,iBACN,IAAIC,GAAY,GAChBhB,EAAQiB,SAAQ,SAAAC,GACd,GAAIA,EAAOlC,KAAKmC,SAASjB,KACvBc,GAAY,EACRI,OAAOC,QAAP,UAAkBnB,EAAlB,2EAAmG,CACrG,IAAMoB,EAAe,CACnBtC,KAAMkB,EACNjB,OAAQmB,GAGJmB,EAAmBL,EAAOtC,GAChC+B,EACUY,EAAkBD,GACzB/C,MAAK,SAAAiD,GACJf,EAAgB,WAChBR,EAAWD,EAAQyB,KAAI,SAAAP,GAAM,OAAIA,EAAOtC,KAAO2C,EAAmBL,EAASM,SAE5EE,MAAMjB,EAAgB,gBAK3BO,IAMFL,EALqB,CACnB3B,KAAMkB,EACNjB,OAAQmB,IAKP7B,MAAK,SAAAoD,GACJ1B,EAAWD,EAAQ4B,OAAOD,IAC1BlB,EAAgB,WAChBN,EAAW,IACXE,EAAa,OAEdqB,MAAMjB,EAAgB,cAoCvB,sCACQ,2BAAOoB,MAAO3B,EAAS4B,SAjCV,SAAChB,GAC1BiB,QAAQC,IAAIlB,EAAMmB,OAAOJ,OACzB1B,EAAWW,EAAMmB,OAAOJ,WAiCpB,wCACU,2BAAOA,MAAOzB,EAAW0B,SA/Bd,SAAChB,GAC1BiB,QAAQC,IAAIlB,EAAMmB,OAAOJ,OACzBxB,EAAaS,EAAMmB,OAAOJ,WA+BtB,6BACE,4BAAQK,KAAK,UAAb,SAGJ,yCACA,wCACY,2BAAOL,MAAOvB,EAAawB,SAlCrB,SAAChB,GACrBiB,QAAQC,IAAIlB,EAAMmB,OAAOJ,OACzBtB,EAAUO,EAAMmB,OAAOJ,WAkCrB,4BACG7B,EAAQmC,QAAO,SAAAjB,GAAM,OAAIA,EAAOlC,KAAKoD,cAAcjB,SAASb,EAAY8B,kBAAgBX,KAAI,SAAAP,GAAM,OACjG,yBAAKmB,IAAG,UAAKnB,EAAOtC,GAAZ,SACN,kBAAC,EAAD,CAAQyD,IAAKnB,EAAOtC,GAAII,KAAMkC,EAAOlC,KAAMC,OAAQiC,EAAOjC,SAC1D,4BAAQoD,IAAG,UAAKnB,EAAOtC,GAAZ,WAAyB0D,QAAS,kBAnC1B1D,EAmCoDsC,EAAOtC,GAlCtFmD,QAAQC,IAAR,aAAkBpD,EAAlB,wBACIwC,OAAOC,QAAQ,8CACjBV,EACgB/B,GACbL,KACC0B,EAAWD,EAAQmC,QAAO,SAAAjB,GAAM,OAAIA,EAAOtC,KAAOA,QAN9B,IAACA,IAmCnB,iBCnJZ2D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.234da773.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const req = axios.post(baseUrl, newObject)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const req = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const req = axios.delete(`${baseUrl}/${id}`)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nexport default {getAll, create, update, deletePerson}","import React, {useState, useEffect} from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst Person = ({name, number}) => {\r\n  return (\r\n    <li>\r\n      <p>Name: {name}</p>\r\n      <p>Number: {number}</p>\r\n    </li>\r\n  )\r\n} \r\n\r\nconst Notification = ({message, name}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  const messageStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px'\r\n  }\r\n\r\n  const messageFormat = (message, name) => {\r\n    if(message === 'success') {\r\n      messageStyle.color = 'green'\r\n      return `Added ${name}`\r\n    } else if (message === 'failure') {\r\n      return `Information of ${name} has already been removed from server`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={messageStyle}>\r\n      {messageFormat(message, name)}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filterNames, setFilter] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(phonebook => {\r\n        setPersons(phonebook)\r\n      })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    let isNewName = true\r\n    persons.forEach(person => {\r\n      if (person.name.includes(newName)) {\r\n        isNewName = false\r\n        if (window.confirm(`${newName} is laready in the Phonebook. Do you want to update the phone number?`)) {\r\n          const personObject = {\r\n            name: newName,\r\n            number: newNumber,\r\n          }\r\n          \r\n          const changingPersonId = person.id\r\n          personService\r\n            .update(changingPersonId, personObject)\r\n            .then(updatedPersons => {\r\n              setErrorMessage('success')\r\n              setPersons(persons.map(person => person.id !== changingPersonId ? person : updatedPersons))\r\n            })\r\n            .catch(setErrorMessage('failure'))\r\n        }\r\n      }\r\n    })\r\n\r\n    if (isNewName) {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber,\r\n      }\r\n      \r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setErrorMessage('success')\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(setErrorMessage('failure'))\r\n    }\r\n  }\r\n\r\n  const handlePersonChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const filterPersons = (event) => {\r\n    console.log(event.target.value)\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleDeleteRequest = (id) => {\r\n    console.log(`ID ${id} to be deleted`)\r\n    if (window.confirm(\"Do you really want to delete this person?\")) {\r\n      personService\r\n        .deletePerson(id)\r\n        .then(\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        )\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Add New Contact</h2>\r\n      <Notification message={errorMessage} name={newName}/>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          Name: <input value={newName} onChange={handlePersonChange}/>\r\n        </div>\r\n        <div>\r\n          Number: <input value={newNumber} onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      <h2>Phonebook</h2>\r\n      <div>\r\n          Filter: <input value={filterNames} onChange={filterPersons}/>\r\n        </div>\r\n      <ul>\r\n        {persons.filter(person => person.name.toLowerCase().includes(filterNames.toLowerCase())).map(person => \r\n          <div key={`${person.id}-div`}>\r\n            <Person key={person.id} name={person.name} number={person.number}/>\r\n            <button key={`${person.id}-delete`} onClick={() => handleDeleteRequest(person.id)}>delete</button>\r\n          </div>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}